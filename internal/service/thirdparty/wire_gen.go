// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package thirdparty

import (
	"github.com/go-kratos/kratos/v2/log"
	"github.com/golang/mock/gomock"
	"github.com/lunzi/aacs/internal/biz/biztest"
)

// Injectors from wire.go:

func initThirdPartyService(controller *gomock.Controller, logger log.Logger) (*Service, func(), error) {
	mockThirdPartyRepo := biztest.NewMockThirdPartyRepo(controller)
	mockAuthRepo := biztest.NewMockAuthRepo(controller)
	mockIdentRepo := biztest.NewMockIdentRepo(controller)
	service, err := newThirdPartyService(mockThirdPartyRepo, mockAuthRepo, mockIdentRepo, logger)
	if err != nil {
		return nil, nil, err
	}
	return service, func() {
	}, nil
}

// wire.go:

func newThirdPartyService(tp *biztest.MockThirdPartyRepo, rbac *biztest.MockAuthRepo,
	ident *biztest.MockIdentRepo,
	logger log.Logger) (*Service, error) {
	return NewThirdPartyService(tp, rbac, ident, nil, logger), nil
}
